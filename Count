#!/usr/bin/env perl
use Mojolicious::Lite;
use v5.14;
use experimental 'signatures';

#plugin 'minion' => File => '/tmp/minion.db';
plugin 'minion' => Pg => 'postgresql:///jobs';
app->minion->backend->pg->migrations->migrate;

app->minion->add_task(count => sub ($job,$upto) {
        unless ($upto =~/^[0-9]+$/) {
            return $job->finish({status => 'error', msg => "bad number : $upto"});
        }
        app->log->info("sleeping $upto");
        sleep $upto;
        app->log->info("done sleeping $upto");
        my $sum = 0;
        $sum += $_ for (1..$upto);
        return $job->finish({status => 'ok', result => $sum});
    });

get '/' => sub ($c) {
  my $jobs = $c->minion->backend->list_jobs(0,100,{state => 'finished'});
  $c->stash(jobs => $jobs);
  $c->render('index');
} => 'index';

get '/delete' => sub($c) {
    my $id = $c->param('id');
    $c->flash(msg => "deleted job");
    $c->minion->backend->remove_job($id);
    $c->redirect_to('index');
} => 'delete';

post '/count' => sub($c) {
    my $num = $c->param('upto');
    $c->flash(msg => "count up to $num");
    my $id = $c->minion->enqueue(count => [ $num ] );
    $c->redirect_to('index');
};

app->start;
__DATA__

@@ layouts/default.html.ep
<!DOCTYPE html>
<html>
  <head><title><%= title %></title></head>
  <style>
  table {
    border:1px solid;
    border-collapse:collapse;
  }
  table tr td,th,caption {
    padding:5px;
    border:1px solid black;  
  }
  .alert {
    color:red;
  }

  </style>
  <body><%= content %></body>
</html>

@@ index.html.ep
% layout 'default';
% title 'Count';
%= form_for 'count' => begin
    %= text_field 'upto', placeholder => 'count up to what?';
    %= submit_button 'enqueue';
%= end
<p>task : <b><%= flash 'msg'; %></b></p>
<%= link_to $self->req->url => begin %>refresh<%= end %><br>
% my $s = minion->stats;
% unless ($s->{active_workers} || $s->{inactive_workers}) {
    <b class='alert'>No workers are running.</b>
% }
<table>
    <tr>
        <th></th>
        <th>active</th>
        <th>inactive</th>
        <th>finished</th>
        <th>failed</th>
        <th>total</th>
    </tr>
    <tr><td>workers</td>
        <td><%= $s->{active_workers} %></td>
        <td><%= $s->{inactive_workers} %></td>
        <td></td>
        <td></td>
        <td><%= $s->{active_workers} + $s->{inactive_workers} %></td>
    </tr>
    % my $t = 0;
    <tr><td>jobs</td>
        <td><%= $s->{active_jobs} %></td>
        <td><%= $s->{inactive_jobs} %></td>
        <td><%= $s->{finished_jobs} %></td>
        <td><%= $s->{failed_jobs} %></td>
        <td><%= $s->{active_jobs} + $s->{inactive_jobs} + $s->{finished_jobs} + $s->{failed_jobs} %></td>
    </tr>
</table>
<br>
<table>
    <caption>Finished jobs</caption>
    <tr>
        <th>args</th>
        <th>result</th>
        <th>run time</th>
        <th>delete</th>
    </tr>
    % for my $j (@$jobs) {
    <tr>
        <td><%= join ',', @{ $j->{args} }; %></td>
        <td><%= dumper($j->{result}) %></td>
        <td><%= $j->{finished} - $j->{started} %></td>
        <td><%= link_to url_for('delete')->query(id => $j->{id}) => begin %>delete<%= end %></td>
    </tr>
    % }
</table>

